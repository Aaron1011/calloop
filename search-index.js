var searchIndex = JSON.parse('{\
"calloop":{"doc":"Calloop, a Callback-based Event Loop","t":[0,4,13,13,3,3,3,5,5,0,3,3,5,0,3,12,12,12,3,12,0,5,3,3,0,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,0,3,3,3,0,3,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,12,4,13,13,13,3,3,12,12,12,3,12,3,3,12,12,3,3,3,8,16,16,16,10,10,10,10,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["channel","Event","Msg","Closed","Sender","SyncSender","Channel","channel","sync_channel","futures","Executor","Scheduler","executor","generic","Generic","file","interest","mode","Fd","0","ping","make_ping","PingSource","Ping","signals","Signal","SIGHUP","SIGINT","SIGQUIT","SIGILL","SIGTRAP","SIGABRT","SIGBUS","SIGFPE","SIGKILL","SIGUSR1","SIGSEGV","SIGUSR2","SIGPIPE","SIGALRM","SIGTERM","SIGSTKFLT","SIGCHLD","SIGCONT","SIGSTOP","SIGTSTP","SIGTTIN","SIGTTOU","SIGURG","SIGXCPU","SIGXFSZ","SIGVTALRM","SIGPROF","SIGWINCH","SIGIO","SIGPWR","SIGSYS","siginfo","ssi_signo","ssi_errno","ssi_code","ssi_pid","ssi_uid","ssi_fd","ssi_tid","ssi_band","ssi_overrun","ssi_trapno","ssi_status","ssi_int","ssi_ptr","ssi_utime","ssi_stime","ssi_addr","ssi_addr_lsb","ssi_syscall","ssi_call_addr","ssi_arch","Event","Signals","timer","Timer","TimerHandle","Timeout","io","Async","get_mut","readable","writable","into_inner","Readable","Writable","send","send","try_send","schedule","new","unwrap","from_fd","ping","signal","full_info","new","add_signals","remove_signals","set_signals","new","handle","add_timeout","cancel_timeout","cancel_all_timeouts","Interest","readable","writable","Mode","OneShot","Level","Edge","Poll","Readiness","readable","writable","error","Token","sub_id","EventLoop","InsertError","source","error","LoopHandle","LoopSignal","RegistrationToken","EventSource","Event","Metadata","Ret","process_events","register","reregister","unregister","Dispatcher","Idle","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_future","from","into","borrow","borrow_mut","try_from","try_into","type_id","into_future","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","clone","fmt","partial_cmp","hash","from_str","try_from","as_ref","eq","fmt","cmp","fmt","clone","eq","ne","hash","process_events","register","reregister","unregister","process_events","register","reregister","unregister","process_events","register","reregister","unregister","process_events","register","reregister","unregister","process_events","register","reregister","unregister","process_events","register","reregister","unregister","drop","drop","drop","drop","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","source","as_raw_fd","poll","poll","poll_read","poll_read_vectored","poll_write","poll_write_vectored","poll_flush","poll_close","EMPTY","READ","WRITE","BOTH","EMPTY","with_sub_id","register","reregister","unregister","as_str","iterator","insert_source","register_dispatcher","insert_idle","enable","update","disable","remove","kill","adapt_io","try_new","handle","dispatch","get_signal","run","stop","wakeup","new","as_source_ref","as_source_mut","into_source_inner","cancel"],"q":["calloop","calloop::channel","","","","","","","","calloop","calloop::futures","","","calloop","calloop::generic","","","","","","calloop","calloop::ping","","","calloop","calloop::signals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","calloop","calloop::timer","","","calloop","calloop::io","","","","","","","calloop::channel","","","calloop::futures","calloop::generic","","","calloop::ping","calloop::signals","","","","","","calloop::timer","","","","","calloop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","calloop::channel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","calloop::futures","","","","","","","","","","","","","","","","calloop::generic","","","","","","","","","","","","","","calloop::ping","","","","","","","","","","","","","","","","calloop::signals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","calloop::timer","","","","","","","","","","","","","","","","","","","","","","","calloop::io","","","","","","","","","","","","","","","","","","","","","","","calloop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","calloop::signals","","","","","","","","","","","","","","","calloop::channel","","","","calloop::futures","","","","calloop::generic","","","","calloop::ping","","","","calloop::signals","","","","calloop::timer","","","","calloop::io","calloop::channel","calloop::ping","calloop::signals","calloop","","","","","","calloop::channel","","calloop::futures","calloop::ping","calloop::signals","calloop::timer","calloop","","","","","","","","","","","","","calloop::generic","calloop::io","","","","","","","","calloop","","","","","","","","","calloop::signals","","calloop","","","","","","","","","","","","","","","","","","","",""],"d":["An MPSC channel whose receiving end is an event source","The events generated by the channel event source","A message was received and is bundled here","The channel was closed","The sender end of a channel","The sender end of a synchronous channel","The receiving end of the channel","Create a new asynchronous channel","Create a new synchronous, bounded channel","A futures executor as an event source","A future executor as an event source","A scheduler to send futures to an executor","Create a new executor, and its associated scheduler","A generic event source wrapping an IO objects or file …","A generic event source wrapping a FD-backed type","The wrapped FD-backed type","The programmed interest","The programmed mode","A wrapper to insert a raw file descriptor into a <code>Generic</code> …","","Ping to the event loop","Create a new ping event source","The ping event source","The Ping handle","Event source for tracking Unix signals","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An event generated by the signal event source","An event source for receiving Unix signals","Timer-based event sources","A Timer event source","An handle to a timer, used to set or cancel timeouts","An itentifier to cancel a timeout if necessary","Adapters for async IO objects","Adapter for async IO manipulations","Mutably access the underlying IO object","A future that resolves once the object becomes ready for …","A future that resolves once the object becomes ready for …","Remove the async adapter and retrieve the underlying …","A future that resolves once the associated object becomes …","A future that resolves once the associated object becomes …","Send a message to the channel","Send a message to the synchronous channel","Send a message to the synchronous channel","Sends the given future to the executor associated to this …","Wrap a FD-backed type into a <code>Generic</code> event source","Unwrap the <code>Generic</code> source to retrieve the underlying type","Wrap a raw file descriptor into a <code>Generic</code> event source","Send a ping to the <code>PingSource</code>","Retrieve the signal number that was receive","Access the full <code>siginfo_t</code> associated with this signal …","Create a new signal event source listening on the …","Add a list of signals to the signals source","Remove a list of signals from the signals source","Replace the list of signals of the source","Create a new timer","Get an handle for this timer","Set a new timeout","Cancel a previsouly set timeout and retrieve the …","Cancel all planned timeouts for this timer","Interest to register regarding the file descriptor","Wait for the FD to be readable","Wait for the FD to be writable","Possible modes for registering a file descriptor","Single event generation","Level-triggering","Edge-triggering","The polling system","Readiness for a file descriptor notification","Is the FD readable","Is the FD writable","Is the FD in an error state","A token (for implementation of the <code>EventSource</code> trait)","The source-internal ID","An event loop","An error generated when trying to insert an event source","The source that could not be inserted","The generated error","An handle to an event loop","A signal that can be shared between thread to stop or …","A token representing a registration in the [<code>EventLoop</code>].","Trait representing an event source","The type of events generated by your source.","Some metadata of your event source","The return type of the user callback","Process any relevant events","Register yourself to this poll instance","Re-register your file descriptors","Unregister your file descriptors","An event source with its callback.","An idle callback that was inserted in this loophorthand for empty interest","Shorthand for read interest","Shorthand for write interest","Shorthand for read and write interest","Shorthand for empty readiness","Provide a copy of the Token with the given <code>sub_id</code>.","Register a new file descriptor for polling","Update the registration for a file descriptor","Unregister a file descriptor","Returns name of signal.","","Inserts a new event source in the loop.","Registers a <code>Dispatcher</code> in the loop.","Inserts an idle callback.","Enables this previously disabled event source.","Makes this source update its registration.","Disables this event source.","Removes this source from the event loop.","Removes this source from the event loop.","Wrap an IO object into an async adapter","Create a new event loop","Retrieve a loop handle","Dispatch pending events to their callbacks","Get a signal to stop this event loop from running","Run this event loop","Stop the event loop","Wake up the event loop","Builds a dispatcher.","Returns an immutable reference to the event source.","Returns a mutable reference to the event source.","Consumes the Dispatcher and returns the inner event …","Cancel the idle callback if it was not already run"],"i":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,3,0,0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,6,6,6,6,0,0,7,8,8,9,2,2,2,10,11,11,12,12,12,12,13,13,14,14,14,0,15,15,0,16,16,16,0,0,17,17,17,0,18,0,0,19,19,0,0,0,0,20,20,20,20,20,20,20,0,0,16,16,16,16,16,16,16,16,16,15,15,15,15,15,15,15,15,15,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,21,21,21,21,21,21,21,1,1,1,1,1,1,1,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,22,22,22,22,22,22,22,23,23,23,23,23,23,23,9,9,9,9,9,9,9,9,9,2,2,2,2,2,2,2,3,3,3,3,3,3,3,24,24,24,24,24,24,24,10,10,10,10,10,10,10,10,10,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,25,25,25,25,25,25,25,6,6,6,6,6,6,6,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,19,19,19,19,19,19,19,19,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,22,22,22,22,23,23,23,23,2,2,2,2,24,24,24,24,12,12,12,12,13,13,13,13,6,7,24,12,16,15,17,18,29,31,7,8,9,10,11,14,32,18,18,28,28,16,15,17,18,28,19,19,19,3,26,27,6,6,6,6,6,6,15,15,15,15,17,18,21,21,21,4,4,29,29,29,29,29,29,29,29,29,30,30,30,30,30,31,31,32,32,32,32,33],"f":[null,null,null,null,null,null,null,[[]],[[["usize",15]]],null,null,null,[[],["result",6]],null,null,null,null,null,null,null,null,[[],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["readable",3]],[[],["writable",3]],[[]],null,null,[[],[["result",4],["senderror",3]]],[[],[["result",4],["senderror",3]]],[[],[["result",4],["trysenderror",4]]],[[],["result",4]],[[["interest",3],["mode",4]],["generic",3]],[[]],[[["rawfd",6],["interest",3],["mode",4]],[["generic",3],["fd",3]]],[[]],[[],["signal",4]],[[],["siginfo",3]],[[],[["signals",3],["result",6]]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],[["timer",3],["result",6]]],[[],["timerhandle",3]],[[["duration",3]],["timeout",3]],[[["timeout",3]],["option",4]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["readiness",3],["token",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[["poll",3]],["result",6]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["signal",4]],[[["formatter",3]],[["result",4],["error",3]]],[[["signal",4]],[["ordering",4],["option",4]]],[[]],[[["str",15]],[["error",4],["result",4],["signal",4]]],[[["i32",15]],[["error",4],["result",4],["signal",4]]],[[],["str",15]],[[["signal",4]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["signal",4]],["ordering",4]],[[["formatter",3]],[["result",4],["error",3]]],[[],["signalfd_siginfo",3]],[[["signalfd_siginfo",3]],["bool",15]],[[["signalfd_siginfo",3]],["bool",15]],[[]],[[["readiness",3],["token",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[["poll",3]],["result",6]],[[["readiness",3],["token",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[["poll",3]],["result",6]],[[["readiness",3],["token",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[["poll",3]],["result",6]],[[["readiness",3],["token",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[["poll",3]],["result",6]],[[["readiness",3],["token",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[["poll",3]],["result",6]],[[["readiness",3],["token",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[["poll",3],["token",3]],["result",6]],[[["poll",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["mode",4]],[[],["interest",3]],[[],["readiness",3]],[[],["token",3]],[[]],[[],["loopsignal",3]],[[],["sender",3]],[[],["syncsender",3]],[[],["scheduler",3]],[[],["ping",3]],[[],["event",3]],[[],["timerhandle",3]],[[],["dispatcher",3]],[[["token",3]],["bool",15]],[[["token",3]],["bool",15]],[[["registrationtoken",3]],["bool",15]],[[["registrationtoken",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],[["option",4],["error",8]]],[[],["rawfd",6]],[[["pin",3],["context",3]],["taskpoll",4]],[[["pin",3],["context",3]],["taskpoll",4]],[[["pin",3],["context",3]],[["result",6],["taskpoll",4]]],[[["pin",3],["context",3]],[["result",6],["taskpoll",4]]],[[["pin",3],["context",3]],[["result",6],["taskpoll",4]]],[[["pin",3],["context",3]],[["result",6],["taskpoll",4]]],[[["pin",3],["context",3]],[["result",6],["taskpoll",4]]],[[["pin",3],["context",3]],[["result",6],["taskpoll",4]]],null,null,null,null,null,[[["u32",15]],["token",3]],[[["mode",4],["rawfd",6],["interest",3],["token",3]],["result",6]],[[["mode",4],["rawfd",6],["interest",3],["token",3]],["result",6]],[[["rawfd",6]],["result",6]],[[],["str",15]],[[],["signaliterator",3]],[[],[["inserterror",3],["registrationtoken",3],["result",4]]],[[["dispatcher",3]],[["result",6],["registrationtoken",3]]],[[["fnonce",8]],["idle",3]],[[["registrationtoken",3]],["result",6]],[[["registrationtoken",3]],["result",6]],[[["registrationtoken",3]],["result",6]],[[["registrationtoken",3]]],[[["registrationtoken",3]]],[[["asrawfd",8]],[["async",3],["result",6]]],[[],["result",6]],[[],["loophandle",3]],[[["into",8],["option",4]],["result",6]],[[],["loopsignal",3]],[[["into",8],["option",4]],["result",6]],[[]],[[]],[[]],[[],["ref",3]],[[],["refmut",3]],[[]],[[]]],"p":[[4,"Event"],[3,"Generic"],[3,"Fd"],[4,"Signal"],[3,"siginfo"],[3,"Async"],[3,"Sender"],[3,"SyncSender"],[3,"Scheduler"],[3,"Ping"],[3,"Event"],[3,"Signals"],[3,"Timer"],[3,"TimerHandle"],[3,"Interest"],[4,"Mode"],[3,"Readiness"],[3,"Token"],[3,"InsertError"],[8,"EventSource"],[3,"Poll"],[3,"Channel"],[3,"Executor"],[3,"PingSource"],[3,"Timeout"],[3,"Readable"],[3,"Writable"],[3,"RegistrationToken"],[3,"LoopHandle"],[3,"EventLoop"],[3,"LoopSignal"],[3,"Dispatcher"],[3,"Idle"]]}\
}');
initSearch(searchIndex);