var searchIndex = JSON.parse('{\
"calloop":{"doc":"Calloop, a Callback-based Event Loop","i":[[3,"Poll","calloop","The polling system",null,null],[3,"Readiness","","Readiness for a file descriptor notification",null,null],[12,"readable","","Is the FD readable",0,null],[12,"writable","","Is the FD writable",0,null],[12,"error","","Is the FD in an error state",0,null],[3,"Token","","A Token for registration",null,null],[12,"sub_id","","The source-internal ID",1,null],[3,"EventLoop","","An event loop",null,null],[3,"InsertError","","An error generated when trying to insert an event source",null,null],[12,"source","","The source that could not be inserted",2,null],[12,"error","","The generated error",2,null],[3,"LoopHandle","","An handle to an event loop",null,null],[3,"LoopSignal","","A signal that can be shared between thread to stop or…",null,null],[3,"Source","","A token representing an event source inserted in the event…",null,null],[3,"Idle","","An idle callback that was inserted in this loop",null,null],[4,"Interest","","Interest to register regarding the file descriptor",null,null],[13,"Readable","","Will generate events when readable",3,null],[13,"Writable","","Will generate events when writable",3,null],[13,"Both","","Will generate events when readable or writable",3,null],[4,"Mode","","Possible modes for registering a file descriptor",null,null],[13,"OneShot","","Single event generation",4,null],[13,"Level","","Level-triggering",4,null],[13,"Edge","","Edge-triggering",4,null],[11,"register","","Register a new file descriptor for polling",5,[[["token",3],["rawfd",6],["interest",4],["mode",4]],["result",6]]],[11,"reregister","","Update the registration for a file descriptor",5,[[["token",3],["rawfd",6],["interest",4],["mode",4]],["result",6]]],[11,"unregister","","Unregister a file descriptor",5,[[["rawfd",6]],["result",6]]],[0,"channel","","An MPSC channel whose receiving end is an event source",null,null],[3,"Sender","calloop::channel","The sender end of a channel",null,null],[3,"SyncSender","","The sender end of a synchronous channel",null,null],[3,"Channel","","The receiving end of the channel",null,null],[4,"Event","","The events generated by the channel event source",null,null],[13,"Msg","","A message was received and is bundled here",6,null],[13,"Closed","","The channel was closed",6,null],[5,"channel","","Create a new asynchronous channel",null,[[]]],[5,"sync_channel","","Create a new synchronous, bounded channel",null,[[]]],[0,"generic","calloop","A generic event source wrapping a file descriptor",null,null],[3,"Generic","calloop::generic","A generic event source wrapping a FD-backed type",null,null],[12,"file","","The wrapped FD-backed type",7,null],[12,"interest","","The programmed interest",7,null],[12,"mode","","The programmed mode",7,null],[3,"Fd","","A wrapper to insert a raw file descriptor into a `Generic`…",null,null],[12,"0","","",8,null],[0,"ping","calloop","Ping to the event loop",null,null],[3,"PingSource","calloop::ping","The ping event source",null,null],[3,"Ping","","The Ping handle",null,null],[5,"make_ping","","Create a new ping event source",null,[[],["result",6]]],[0,"signals","calloop","Event source for tracking Unix signals",null,null],[4,"Signal","calloop::signals","",null,null],[13,"SIGHUP","","",9,null],[13,"SIGINT","","",9,null],[13,"SIGQUIT","","",9,null],[13,"SIGILL","","",9,null],[13,"SIGTRAP","","",9,null],[13,"SIGABRT","","",9,null],[13,"SIGBUS","","",9,null],[13,"SIGFPE","","",9,null],[13,"SIGKILL","","",9,null],[13,"SIGUSR1","","",9,null],[13,"SIGSEGV","","",9,null],[13,"SIGUSR2","","",9,null],[13,"SIGPIPE","","",9,null],[13,"SIGALRM","","",9,null],[13,"SIGTERM","","",9,null],[13,"SIGSTKFLT","","",9,null],[13,"SIGCHLD","","",9,null],[13,"SIGCONT","","",9,null],[13,"SIGSTOP","","",9,null],[13,"SIGTSTP","","",9,null],[13,"SIGTTIN","","",9,null],[13,"SIGTTOU","","",9,null],[13,"SIGURG","","",9,null],[13,"SIGXCPU","","",9,null],[13,"SIGXFSZ","","",9,null],[13,"SIGVTALRM","","",9,null],[13,"SIGPROF","","",9,null],[13,"SIGWINCH","","",9,null],[13,"SIGIO","","",9,null],[13,"SIGPWR","","",9,null],[13,"SIGSYS","","",9,null],[3,"siginfo","","",null,null],[12,"ssi_signo","","",10,null],[12,"ssi_errno","","",10,null],[12,"ssi_code","","",10,null],[12,"ssi_pid","","",10,null],[12,"ssi_uid","","",10,null],[12,"ssi_fd","","",10,null],[12,"ssi_tid","","",10,null],[12,"ssi_band","","",10,null],[12,"ssi_overrun","","",10,null],[12,"ssi_trapno","","",10,null],[12,"ssi_status","","",10,null],[12,"ssi_int","","",10,null],[12,"ssi_ptr","","",10,null],[12,"ssi_utime","","",10,null],[12,"ssi_stime","","",10,null],[12,"ssi_addr","","",10,null],[12,"ssi_addr_lsb","","",10,null],[12,"ssi_syscall","","",10,null],[12,"ssi_call_addr","","",10,null],[12,"ssi_arch","","",10,null],[3,"Event","","An event generated by the signal event source",null,null],[3,"Signals","","An event source for receiving Unix signals",null,null],[0,"timer","calloop","Timer-based event sources",null,null],[3,"Timer","calloop::timer","A Timer event source",null,null],[3,"TimerHandle","","An handle to a timer, used to set or cancel timeouts",null,null],[3,"Timeout","","An itentifier to cancel a timeout if necessary",null,null],[11,"insert_source","calloop","Insert an new event source in the loop",11,[[],[["result",4],["source",3],["inserterror",3]]]],[11,"insert_idle","","Insert an idle callback",11,[[["fnonce",8]],["idle",3]]],[11,"with_source","","Access this event source",11,[[["fnonce",8],["source",3]]]],[11,"enable","","Enable this previously disabled event source",11,[[["source",3]],["result",6]]],[11,"update","","Make this source update its registration",11,[[["source",3]],["result",6]]],[11,"disable","","Disable this event source",11,[[["source",3]],["result",6]]],[11,"remove","","Remove this source from the event loop",11,[[["source",3],["eventsource",8]],["eventsource",8]]],[11,"kill","","Remove this event source from the event loop and drop it",11,[[["source",3],["eventsource",8]]]],[11,"new","","Create a new event loop",12,[[],[["result",6],["eventloop",3]]]],[11,"handle","","Retrieve a loop handle",12,[[],["loophandle",3]]],[11,"dispatch","","Dispatch pending events to their callbacks",12,[[["into",8],["option",4]],["result",6]]],[11,"get_signal","","Get a signal to stop this event loop from running",12,[[],["loopsignal",3]]],[11,"run","","Run this event loop",12,[[["option",4],["duration",3]],["result",6]]],[11,"stop","","Stop the event loop",13,[[]]],[11,"wakeup","","Wake up the event loop",13,[[]]],[11,"send","calloop::channel","Send a message to the channel",14,[[],[["senderror",3],["result",4]]]],[11,"send","","Send a message to the synchronous channel",15,[[],[["senderror",3],["result",4]]]],[11,"try_send","","Send a message to the synchronous channel",15,[[],[["result",4],["trysenderror",4]]]],[11,"new","calloop::generic","Wrap a FD-backed type into a `Generic` event source",7,[[["interest",4],["mode",4]],["generic",3]]],[11,"unwrap","","Unwrap the `Generic` source to retrieve the underlying type",7,[[]]],[11,"from_fd","","Wrap a raw file descriptor into a `Generic` event source",7,[[["rawfd",6],["interest",4],["mode",4]],[["generic",3],["fd",3]]]],[11,"ping","calloop::ping","Send a ping to the `PingSource`",16,[[]]],[11,"signal","calloop::signals","Retrieve the signal number that was receive",17,[[],["signal",4]]],[11,"full_info","","Access the full `siginfo_t` associated with this signal…",17,[[],["siginfo",3]]],[11,"new","","Create a new signal event source listening on the…",18,[[],[["signals",3],["result",6]]]],[11,"add_signals","","Add a list of signals to the signals source",18,[[],["result",6]]],[11,"remove_signals","","Remove a list of signals to the signals source",18,[[],["result",6]]],[11,"set_signals","","Replace the list of signals of the source",18,[[],["result",6]]],[11,"new","calloop::timer","Create a new timer with default parameters",19,[[],[["timer",3],["result",6]]]],[11,"handle","","Get an handle for this timer",19,[[],["timerhandle",3]]],[11,"add_timeout","","Set a new timeout",20,[[["duration",3]],["timeout",3]]],[11,"cancel_timeout","","Cancel a previsouly set timeout and retrieve the…",20,[[["timeout",3]],["option",4]]],[11,"cancel_all_timeouts","","Cancel all planned timeouts for this timer",20,[[]]],[11,"cancel","calloop","Cancel the idle callback if it was not already run",21,[[]]],[8,"EventSource","","Trait representing an event source",null,null],[16,"Event","","The type of events generated by your source.",22,null],[16,"Metadata","","Some metadata of your event source",22,null],[16,"Ret","","The return type of the user callback",22,null],[10,"process_events","","Process any relevant events",22,[[["readiness",3],["token",3]],["result",6]]],[10,"register","","Register yourself to this poll instance",22,[[["token",3],["poll",3]],["result",6]]],[10,"reregister","","Re-register your file descriptors",22,[[["token",3],["poll",3]],["result",6]]],[10,"unregister","","Unregister your file descriptors",22,[[["poll",3]],["result",6]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","calloop::channel","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","calloop::generic","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","calloop::ping","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","calloop::signals","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","calloop::timer","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from_str","calloop::signals","",9,[[],[["error",4],["result",4],["signal",4]]]],[11,"eq","","",9,[[["signal",4]]]],[11,"cmp","","",9,[[["signal",4]],["ordering",4]]],[11,"try_from","","",9,[[],[["error",4],["result",4],["signal",4]]]],[11,"clone","","",9,[[],["signal",4]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"as_ref","","",9,[[]]],[11,"hash","","",9,[[]]],[11,"partial_cmp","","",9,[[["signal",4]],[["option",4],["ordering",4]]]],[11,"hash","","",10,[[]]],[11,"fmt","","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",10,[[["signalfd_siginfo",3]]]],[11,"ne","","",10,[[["signalfd_siginfo",3]]]],[11,"clone","","",10,[[],["signalfd_siginfo",3]]],[11,"process_events","calloop::channel","",24,[[["readiness",3],["token",3]],["result",6]]],[11,"register","","",24,[[["token",3],["poll",3]],["result",6]]],[11,"reregister","","",24,[[["token",3],["poll",3]],["result",6]]],[11,"unregister","","",24,[[["poll",3]],["result",6]]],[11,"process_events","calloop::generic","",7,[[["readiness",3],["token",3]],["result",6]]],[11,"register","","",7,[[["token",3],["poll",3]],["result",6]]],[11,"reregister","","",7,[[["token",3],["poll",3]],["result",6]]],[11,"unregister","","",7,[[["poll",3]],["result",6]]],[11,"process_events","calloop::ping","",25,[[["readiness",3],["token",3]],["result",6]]],[11,"register","","",25,[[["token",3],["poll",3]],["result",6]]],[11,"reregister","","",25,[[["token",3],["poll",3]],["result",6]]],[11,"unregister","","",25,[[["poll",3]],["result",6]]],[11,"process_events","calloop::signals","",18,[[["readiness",3],["token",3]],["result",6]]],[11,"register","","",18,[[["token",3],["poll",3]],["result",6]]],[11,"reregister","","",18,[[["token",3],["poll",3]],["result",6]]],[11,"unregister","","",18,[[["poll",3]],["result",6]]],[11,"process_events","calloop::timer","",19,[[["readiness",3],["token",3]],["result",6]]],[11,"register","","",19,[[["token",3],["poll",3]],["result",6]]],[11,"reregister","","",19,[[["token",3],["poll",3]],["result",6]]],[11,"unregister","","",19,[[["poll",3]],["result",6]]],[11,"drop","calloop::channel","",14,[[]]],[11,"drop","calloop::ping","",25,[[]]],[11,"drop","calloop::signals","",18,[[]]],[11,"clone","calloop","",4,[[],["mode",4]]],[11,"clone","","",3,[[],["interest",4]]],[11,"clone","","",0,[[],["readiness",3]]],[11,"clone","","",1,[[],["token",3]]],[11,"clone","","",11,[[],["loophandle",3]]],[11,"clone","","",13,[[],["loopsignal",3]]],[11,"clone","calloop::channel","",14,[[],["sender",3]]],[11,"clone","","",15,[[],["syncsender",3]]],[11,"clone","calloop::ping","",16,[[],["ping",3]]],[11,"clone","calloop::signals","",17,[[],["event",3]]],[11,"clone","calloop::timer","",20,[[],["timerhandle",3]]],[11,"eq","calloop","",1,[[["token",3]]]],[11,"ne","","",1,[[["token",3]]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"source","","",2,[[],[["error",8],["option",4]]]],[11,"as_raw_fd","calloop::generic","",8,[[],["rawfd",6]]],[11,"as_str","calloop::signals","Returns name of signal.",9,[[]]],[11,"iterator","","",9,[[],["signaliterator",3]]]],"p":[[3,"Readiness"],[3,"Token"],[3,"InsertError"],[4,"Interest"],[4,"Mode"],[3,"Poll"],[4,"Event"],[3,"Generic"],[3,"Fd"],[4,"Signal"],[3,"siginfo"],[3,"LoopHandle"],[3,"EventLoop"],[3,"LoopSignal"],[3,"Sender"],[3,"SyncSender"],[3,"Ping"],[3,"Event"],[3,"Signals"],[3,"Timer"],[3,"TimerHandle"],[3,"Idle"],[8,"EventSource"],[3,"Source"],[3,"Channel"],[3,"PingSource"],[3,"Timeout"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);