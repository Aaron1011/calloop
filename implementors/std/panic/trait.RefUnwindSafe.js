(function() {var implementors = {};
implementors["calloop"] = [{"text":"impl RefUnwindSafe for Interest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Poll","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Readiness","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Token","synthetic":true,"types":[]},{"text":"impl&lt;'l, Data&gt; !RefUnwindSafe for EventLoop&lt;'l, Data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !RefUnwindSafe for InsertError&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l, Data&gt; !RefUnwindSafe for LoopHandle&lt;'l, Data&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoopSignal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegistrationToken","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; !RefUnwindSafe for Dispatcher&lt;S, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; !RefUnwindSafe for Idle&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l, F&gt; !RefUnwindSafe for Async&lt;'l, F&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mode","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SyncSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Channel&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Event&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Executor&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Scheduler&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; RefUnwindSafe for Generic&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PingSource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ping","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Signals","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Timer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for TimerHandle&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Timeout","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()