(function() {var implementors = {};
implementors["calloop"] = [{"text":"impl UnwindSafe for Interest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Poll","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Readiness","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Token","synthetic":true,"types":[]},{"text":"impl&lt;'l, Data&gt; !UnwindSafe for EventLoop&lt;'l, Data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; !UnwindSafe for InsertError&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l, Data&gt; !UnwindSafe for LoopHandle&lt;'l, Data&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LoopSignal","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RegistrationToken","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; !UnwindSafe for Dispatcher&lt;S, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; !UnwindSafe for Idle&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Mode","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for SyncSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !UnwindSafe for Channel&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Event&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for Generic&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PingSource","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Ping","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Signals","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Timer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for TimerHandle&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Timeout","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()