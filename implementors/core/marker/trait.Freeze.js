(function() {var implementors = {};
implementors["calloop"] = [{"text":"impl Freeze for Interest","synthetic":true,"types":[]},{"text":"impl Freeze for Poll","synthetic":true,"types":[]},{"text":"impl Freeze for Readiness","synthetic":true,"types":[]},{"text":"impl Freeze for Token","synthetic":true,"types":[]},{"text":"impl&lt;'l, Data&gt; Freeze for EventLoop&lt;'l, Data&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for InsertError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'l, Data&gt; Freeze for LoopHandle&lt;'l, Data&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for LoopSignal","synthetic":true,"types":[]},{"text":"impl Freeze for RegistrationToken","synthetic":true,"types":[]},{"text":"impl&lt;S, F&gt; Freeze for Dispatcher&lt;S, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Freeze for Idle&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Mode","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for Sender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for SyncSender&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for Channel&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Event&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for Executor&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for Scheduler&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for Generic&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Fd","synthetic":true,"types":[]},{"text":"impl Freeze for PingSource","synthetic":true,"types":[]},{"text":"impl Freeze for Ping","synthetic":true,"types":[]},{"text":"impl Freeze for Event","synthetic":true,"types":[]},{"text":"impl Freeze for Signals","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Timer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for TimerHandle&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Timeout","synthetic":true,"types":[]},{"text":"impl&lt;'l, F&gt; Freeze for Async&lt;'l, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'s, 'l, F&gt; Freeze for Readable&lt;'s, 'l, F&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'s, 'l, F&gt; Freeze for Writable&lt;'s, 'l, F&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()